type Order {
    normal: Int!
    abnormal: Int!

    normalLt2h: Int!
    abnormalLt2h: Int!

    normalGt2h: Int!
    abnormalGt2h: Int!
}

type TicketPretty {
    orders: [Int]
    aliases: [String]
    week: Int!
    year: Int!
}

type Ticket {
    id: ID!
    order: Order
    week: Int!
    year: Int!
    ctime: Timestamp!
    utime: Timestamp!
}

type TicketList {
    data: [Ticket]
    count: Int!
    code: Int!
}


type UpdateTicket {
    success: Boolean!
}


type DeleteTicket {
    success: Boolean!
}


input CreateTicketInput {
    normalLt2h: Int!
    abnormalLt2h: Int!

    normalGt2h: Int!
    abnormalGt2h: Int!
}

input UpdateTicketInput {
    normalLt2h: Int!
    abnormalLt2h: Int!

    normalGt2h: Int!
    abnormalGt2h: Int!
}
